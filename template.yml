apiVersion: v1
kind: Template
metadata:
  name: actuator
parameters:
- displayName: Github Hook Shared Secret
  name: GITHUB_WEBHOOK_SECRET
  from: '[a-z0-9]{20}'
  generate: expression
  required: true
- displayName: Domain
  name: ACTUATOR_DOMAIN
  required: true
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: actuator
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: actuator
    name: actuator
  spec:
    host: ${ACTUATOR_DOMAIN}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: actuator
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: actuator
    name: actuator
  spec:
    replicas: 1
    selector:
      app: actuator
      deploymentconfig: actuator
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: actuator
          deploymentconfig: actuator
      spec:
        containers:
        - image: ninech/actuator
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: actuator
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /actuator
            name: config-file
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: actuator
        serviceAccountName: actuator
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: actuator.yml
              path: actuator.yml
            name: actuator
          name: config-file
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - actuator
        from:
          kind: ImageStreamTag
          name: actuator:latest
      type: ImageChange
- apiVersion: v1
  data:
    actuator.yml: |
      github_webhook_secret: ${GITHUB_WEBHOOK_SECRET}
      repositories:
      - enabled: true
        fullname: ninech/actuator
        template: actuator-test
      - enabled: true
        fullname: baxterthehacker/public-repo
        template: actuator-test
  kind: ConfigMap
  metadata:
    labels:
      app: actuator
    name: actuator
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: actuator
    name: actuator
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: actuator
      deploymentconfig: actuator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
